package com.shuffle.scplayer.jna;
import com.sun.jna.Callback;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class SpDebugCallbacks extends Structure {
	/** C type : message_callback* */
	public SpDebugCallbacks.message_callback message;
	public interface message_callback extends Callback {
		void apply(Pointer msg, Pointer userdata);
	};
	public SpDebugCallbacks() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("message");
	}
	/** @param message C type : message_callback* */
	public SpDebugCallbacks(SpDebugCallbacks.message_callback message) {
		super();
		this.message = message;
	}
	public SpDebugCallbacks(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends SpDebugCallbacks implements Structure.ByReference {
		
	};
	public static class ByValue extends SpDebugCallbacks implements Structure.ByValue {
		
	};
}
