package com.shuffle.scplayer.jna;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class SpSampleFormat extends Structure {
	public short channels;
	public short sample_type;
	public int sample_rate;
	public SpSampleFormat() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("channels", "sample_type", "sample_rate");
	}
	public SpSampleFormat(short channels, short sample_type, int sample_rate) {
		super();
		this.channels = channels;
		this.sample_type = sample_type;
		this.sample_rate = sample_rate;
	}
	public SpSampleFormat(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends SpSampleFormat implements Structure.ByReference {
		
	};
	public static class ByValue extends SpSampleFormat implements Structure.ByValue {
		
	};
}
